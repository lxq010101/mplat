package com.ustcinfo.mobile.platform.core.core;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.text.TextUtils;
import android.util.Log;

import com.ustcinfo.mobile.platform.core.R;
import com.ustcinfo.mobile.platform.core.appstore.AppStore;
import com.ustcinfo.mobile.platform.core.config.MConfig;
import com.ustcinfo.mobile.platform.core.constants.Constants;
import com.ustcinfo.mobile.platform.core.interfaces.HttpRequestCallbak;
import com.ustcinfo.mobile.platform.core.interfaces.LoginCallBack;
import com.ustcinfo.mobile.platform.core.model.UserInfo;
import com.ustcinfo.mobile.platform.core.utils.Key64;
import com.ustcinfo.mobile.platform.core.utils.MHttpClient;
import com.ustcinfo.mobile.platform.core.utils.MSharedPreferenceUtils;
import com.ustcinfo.mobile.platform.core.utils.RequestParams;

import org.json.JSONException;
import org.json.JSONObject;

/**
 * Created by SunChao on 2017/5/15.
 */

public class MLogin {

    private boolean autoLogin;

    private String userId;

    private String password;

    private String verifyCode;

    private Context context;

    private boolean isSSO;

    private LoginCallBack callback;

    /**
     * 登陆实例化
     *
     * @param autoLogin 记录是否进行自动登陆
     */
    public MLogin(Context context, boolean autoLogin, LoginCallBack callback) {
        this.autoLogin = autoLogin;
        this.context = context;
        this.callback = callback;
    }

    /**
     * 使用用户上次登录缓存历史记录进行登录
     */
    public void loginBySSO() {
        autoLogin = MSharedPreferenceUtils.queryBooleanBySettings(context, Constants.KEY_PREFERENCE_AUTO_LOGIN);
        String userId = UserInfo.get().getUserIdCache();
        String pwd = UserInfo.get().getPasswordCache();
        //测试：直接登录
//        autoLogin = true ;
//        userId = "H8472580 " ;
//        pwd = "12345" ;
        if(userId!=null&&pwd!=null)
        loginBySSO(autoLogin, userId, pwd);
        else
            goLoginActivity();
    }

    /**
     * @param autoLogin 设置下次是否为自动登陆
     */
    public void loginBySSO(boolean autoLogin, String userId, String password) {
        if (autoLogin && !TextUtils.isEmpty(userId) && !TextUtils.isEmpty(password)) {
            isSSO = true;
            login(userId, "", password, true);
        } else {
            goLoginActivity();
        }
    }


    private void goLoginActivity() {
        Intent i = null;
        try {
            i = new Intent(context, Class.forName(MConfig.getActivity("login")));
            context.startActivity(i);
            ((Activity) context).finish();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
    }

    /**
     * 登陆
     *
     * @param userId   账号
     * @param password 密码
     * @param isSSO    单点登录不弹出登陆进度框
     */
    public void login(String userId, String password, String verifyCode, boolean isSSO) {
        this.userId = userId;
        this.password = password;
        this.verifyCode = verifyCode;
        RequestParams p = new RequestParams();
        p.put("userId", userId);
        if (!TextUtils.isEmpty(password))
            p.put("password", password);

        if (!TextUtils.isEmpty(verifyCode)) {
            p.put("telephoneCode", verifyCode);
        }
        //versionName 记录登录版本日志
        try {
            p.put("versionName", context.getPackageManager().getPackageInfo(context.getPackageName(), 0).versionName);
        } catch (Exception e) {
        }
        p.put("city", UserInfo.get().getCityCode());
        p.put("clientType", "1");

        if (isSSO) {
            autoLogin = true;
            loginByParams(MConfig.get("loginBySSO"), p);
        } else {
            loginByParams(MConfig.get("login"), p);
        }
    }

    private void loginByParams(String url, final RequestParams params) {
        callback.onLoginStart();
        Log.i("request  ", "loginByParams:    params ===   " + params);
        MHttpClient.get().post(url, params, new HttpRequestCallbak() {
            @Override
            public void onSuccess(JSONObject responseObj) {

                try {
                    com.alibaba.fastjson.JSONObject dataObj = com.alibaba.fastjson.JSONObject.parseObject(responseObj.getJSONObject("data").toString());

                    String userId = dataObj.getString("userId") != null ? Key64.decipher(dataObj.getString("userId")) : "";
                    if (!userId.equals(MLogin.this.userId)) {
                        callback.onLoginFailed(context.getString(R.string.login_exception));
                        return;
                    }

                    String areaCode = null;
                    try {
                        areaCode = dataObj.getString("areaCode") != null ? dataObj.getString("areaCode") : "";
                    } catch (Exception e) {
                    }
                    String telephone = null;
                    try {
                        telephone = dataObj.getString("telephone") != null ? dataObj.getString("telephone") : "";
                    } catch (Exception e) {
                    }

                    String userName = dataObj.getString("userName") != null ? dataObj.getString("userName") : "";
                    String organization = dataObj.getString("orgName") != null ? dataObj.getString("orgName") : "";
                    String ticket = dataObj.getString("ticket") != null ? dataObj.getString("ticket") : "";
                    //处理返回的应用列表
                    AppStore.get().appsJson2List(responseObj);
                    //将登陆数据进行缓存
                    if (isSSO) {
                        UserInfo.get().create(userId, areaCode, userName, password, organization, ticket, telephone);
                    } else {
                        UserInfo.get().create(userId, areaCode, userName, password, organization, ticket, telephone).save();
                    }
                    MSharedPreferenceUtils.saveBooleanSettings(context, Constants.KEY_PREFERENCE_AUTO_LOGIN, autoLogin);
                    MSharedPreferenceUtils.saveBooleanSettings(context, Constants.KEY_PREFERENCE_CHANGE_ACCOUNT, false);
                    callback.onLoginSuccess();
                } catch (com.alibaba.fastjson.JSONException e) {
                    e.printStackTrace();
                    callback.onLoginFailed(context.getString(R.string.data_parse_error_by_login));
                } catch (JSONException e) {
                    e.printStackTrace();
                    callback.onLoginFailed(context.getString(R.string.data_parse_error_by_login));
                }
            }

            @Override
            public void onFailed(String msg) {
                callback.onLoginFailed(msg);
            }
        });
    }
}
